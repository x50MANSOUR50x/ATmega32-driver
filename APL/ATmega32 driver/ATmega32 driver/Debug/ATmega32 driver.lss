
ATmega32 driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000048e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  0000048e  00000502  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000050c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000053c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000120  00000000  00000000  00000578  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000fbd  00000000  00000000  00000698  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008cc  00000000  00000000  00001655  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007dc  00000000  00000000  00001f21  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001c4  00000000  00000000  00002700  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000550  00000000  00000000  000028c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000008a3  00000000  00000000  00002e14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d0  00000000  00000000  000036b7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e8       	ldi	r30, 0x8E	; 142
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <main>
  7a:	0c 94 45 02 	jmp	0x48a	; 0x48a <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <SEVEN_SEG_Init>:
#include "7SEGMENT_interface.h"
#include "7SEGMENT_private.h"

void SEVEN_SEG_Init(unsigned char port)
{
	DIO_SetPortDir(port,0xff);
  82:	6f ef       	ldi	r22, 0xFF	; 255
  84:	0e 94 ae 01 	call	0x35c	; 0x35c <DIO_SetPortDir>
  88:	08 95       	ret

0000008a <SEVEN_SEG_Write>:
}
void SEVEN_SEG_Write(unsigned char port,unsigned char value)  
{
  8a:	cf 93       	push	r28
  8c:	df 93       	push	r29
  8e:	cd b7       	in	r28, 0x3d	; 61
  90:	de b7       	in	r29, 0x3e	; 62
  92:	2a 97       	sbiw	r28, 0x0a	; 10
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	f8 94       	cli
  98:	de bf       	out	0x3e, r29	; 62
  9a:	0f be       	out	0x3f, r0	; 63
  9c:	cd bf       	out	0x3d, r28	; 61
	#if defined CC
	unsigned char seven_seg[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x47,0x7f,0x6f};
  9e:	9a e0       	ldi	r25, 0x0A	; 10
  a0:	e0 e6       	ldi	r30, 0x60	; 96
  a2:	f0 e0       	ldi	r31, 0x00	; 0
  a4:	de 01       	movw	r26, r28
  a6:	11 96       	adiw	r26, 0x01	; 1
  a8:	01 90       	ld	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	9a 95       	dec	r25
  ae:	e1 f7       	brne	.-8      	; 0xa8 <SEVEN_SEG_Write+0x1e>
		DIO_WritePort(port,seven_seg[value]);
  b0:	e1 e0       	ldi	r30, 0x01	; 1
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	ec 0f       	add	r30, r28
  b6:	fd 1f       	adc	r31, r29
  b8:	e6 0f       	add	r30, r22
  ba:	f1 1d       	adc	r31, r1
  bc:	60 81       	ld	r22, Z
  be:	0e 94 c1 01 	call	0x382	; 0x382 <DIO_WritePort>
    #if defined CA
	unsigned char seven_seg[]={~0x3f,~0x06,~0x5b,~0x4f,~0x66,~0x6d,~0x7d,~0x47,~0x7f,~0x6f};
		DIO_WritePort(port,seven_seg[value]);
	#endif	
	
}
  c2:	2a 96       	adiw	r28, 0x0a	; 10
  c4:	0f b6       	in	r0, 0x3f	; 63
  c6:	f8 94       	cli
  c8:	de bf       	out	0x3e, r29	; 62
  ca:	0f be       	out	0x3f, r0	; 63
  cc:	cd bf       	out	0x3d, r28	; 61
  ce:	df 91       	pop	r29
  d0:	cf 91       	pop	r28
  d2:	08 95       	ret

000000d4 <BUTTON_Init>:

#include "DIO_interface.h"
#include "BUTTON_interface.h"
void BUTTON_Init(unsigned char port,unsigned char pin)
{
	DIO_SetPinDir(port,pin,0);
  d4:	40 e0       	ldi	r20, 0x00	; 0
  d6:	0e 94 71 00 	call	0xe2	; 0xe2 <DIO_SetPinDir>
  da:	08 95       	ret

000000dc <BUTTON_Read>:
}
unsigned char BUTTON_Read(unsigned char port,unsigned char pin)
{
	unsigned char x;
	x= DIO_ReadPin(port,pin);
  dc:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_ReadPin>
	return x;
}
  e0:	08 95       	ret

000000e2 <DIO_SetPinDir>:
		case portc:
			PORTC^=(1<<pin);
		break;
		//portD
		case portd:
			PORTD^=(1<<pin);
  e2:	82 34       	cpi	r24, 0x42	; 66
  e4:	19 f1       	breq	.+70     	; 0x12c <DIO_SetPinDir+0x4a>
  e6:	18 f4       	brcc	.+6      	; 0xee <DIO_SetPinDir+0xc>
  e8:	81 34       	cpi	r24, 0x41	; 65
  ea:	39 f0       	breq	.+14     	; 0xfa <DIO_SetPinDir+0x18>
  ec:	08 95       	ret
  ee:	83 34       	cpi	r24, 0x43	; 67
  f0:	b1 f1       	breq	.+108    	; 0x15e <DIO_SetPinDir+0x7c>
  f2:	84 34       	cpi	r24, 0x44	; 68
  f4:	09 f4       	brne	.+2      	; 0xf8 <DIO_SetPinDir+0x16>
  f6:	4c c0       	rjmp	.+152    	; 0x190 <DIO_SetPinDir+0xae>
  f8:	08 95       	ret
  fa:	41 30       	cpi	r20, 0x01	; 1
  fc:	59 f4       	brne	.+22     	; 0x114 <DIO_SetPinDir+0x32>
  fe:	2a b3       	in	r18, 0x1a	; 26
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	02 c0       	rjmp	.+4      	; 0x10a <DIO_SetPinDir+0x28>
 106:	88 0f       	add	r24, r24
 108:	99 1f       	adc	r25, r25
 10a:	6a 95       	dec	r22
 10c:	e2 f7       	brpl	.-8      	; 0x106 <DIO_SetPinDir+0x24>
 10e:	82 2b       	or	r24, r18
 110:	8a bb       	out	0x1a, r24	; 26
 112:	08 95       	ret
 114:	2a b3       	in	r18, 0x1a	; 26
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	02 c0       	rjmp	.+4      	; 0x120 <DIO_SetPinDir+0x3e>
 11c:	88 0f       	add	r24, r24
 11e:	99 1f       	adc	r25, r25
 120:	6a 95       	dec	r22
 122:	e2 f7       	brpl	.-8      	; 0x11c <DIO_SetPinDir+0x3a>
 124:	80 95       	com	r24
 126:	82 23       	and	r24, r18
 128:	8a bb       	out	0x1a, r24	; 26
 12a:	08 95       	ret
 12c:	41 30       	cpi	r20, 0x01	; 1
 12e:	59 f4       	brne	.+22     	; 0x146 <DIO_SetPinDir+0x64>
 130:	27 b3       	in	r18, 0x17	; 23
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	02 c0       	rjmp	.+4      	; 0x13c <DIO_SetPinDir+0x5a>
 138:	88 0f       	add	r24, r24
 13a:	99 1f       	adc	r25, r25
 13c:	6a 95       	dec	r22
 13e:	e2 f7       	brpl	.-8      	; 0x138 <DIO_SetPinDir+0x56>
 140:	82 2b       	or	r24, r18
 142:	87 bb       	out	0x17, r24	; 23
 144:	08 95       	ret
 146:	27 b3       	in	r18, 0x17	; 23
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	02 c0       	rjmp	.+4      	; 0x152 <DIO_SetPinDir+0x70>
 14e:	88 0f       	add	r24, r24
 150:	99 1f       	adc	r25, r25
 152:	6a 95       	dec	r22
 154:	e2 f7       	brpl	.-8      	; 0x14e <DIO_SetPinDir+0x6c>
 156:	80 95       	com	r24
 158:	82 23       	and	r24, r18
 15a:	87 bb       	out	0x17, r24	; 23
 15c:	08 95       	ret
 15e:	41 30       	cpi	r20, 0x01	; 1
 160:	59 f4       	brne	.+22     	; 0x178 <DIO_SetPinDir+0x96>
 162:	24 b3       	in	r18, 0x14	; 20
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	02 c0       	rjmp	.+4      	; 0x16e <DIO_SetPinDir+0x8c>
 16a:	88 0f       	add	r24, r24
 16c:	99 1f       	adc	r25, r25
 16e:	6a 95       	dec	r22
 170:	e2 f7       	brpl	.-8      	; 0x16a <DIO_SetPinDir+0x88>
 172:	82 2b       	or	r24, r18
 174:	84 bb       	out	0x14, r24	; 20
 176:	08 95       	ret
 178:	24 b3       	in	r18, 0x14	; 20
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 c0       	rjmp	.+4      	; 0x184 <DIO_SetPinDir+0xa2>
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	6a 95       	dec	r22
 186:	e2 f7       	brpl	.-8      	; 0x180 <DIO_SetPinDir+0x9e>
 188:	80 95       	com	r24
 18a:	82 23       	and	r24, r18
 18c:	84 bb       	out	0x14, r24	; 20
 18e:	08 95       	ret
 190:	41 30       	cpi	r20, 0x01	; 1
 192:	59 f4       	brne	.+22     	; 0x1aa <DIO_SetPinDir+0xc8>
 194:	21 b3       	in	r18, 0x11	; 17
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <DIO_SetPinDir+0xbe>
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	6a 95       	dec	r22
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <DIO_SetPinDir+0xba>
 1a4:	82 2b       	or	r24, r18
 1a6:	81 bb       	out	0x11, r24	; 17
 1a8:	08 95       	ret
 1aa:	21 b3       	in	r18, 0x11	; 17
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <DIO_SetPinDir+0xd4>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	6a 95       	dec	r22
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <DIO_SetPinDir+0xd0>
 1ba:	80 95       	com	r24
 1bc:	82 23       	and	r24, r18
 1be:	81 bb       	out	0x11, r24	; 17
 1c0:	08 95       	ret

000001c2 <DIO_WritePin>:
 1c2:	82 34       	cpi	r24, 0x42	; 66
 1c4:	19 f1       	breq	.+70     	; 0x20c <DIO_WritePin+0x4a>
 1c6:	18 f4       	brcc	.+6      	; 0x1ce <DIO_WritePin+0xc>
 1c8:	81 34       	cpi	r24, 0x41	; 65
 1ca:	39 f0       	breq	.+14     	; 0x1da <DIO_WritePin+0x18>
 1cc:	08 95       	ret
 1ce:	83 34       	cpi	r24, 0x43	; 67
 1d0:	b1 f1       	breq	.+108    	; 0x23e <DIO_WritePin+0x7c>
 1d2:	84 34       	cpi	r24, 0x44	; 68
 1d4:	09 f4       	brne	.+2      	; 0x1d8 <DIO_WritePin+0x16>
 1d6:	4c c0       	rjmp	.+152    	; 0x270 <DIO_WritePin+0xae>
 1d8:	08 95       	ret
 1da:	41 30       	cpi	r20, 0x01	; 1
 1dc:	59 f4       	brne	.+22     	; 0x1f4 <DIO_WritePin+0x32>
 1de:	2b b3       	in	r18, 0x1b	; 27
 1e0:	81 e0       	ldi	r24, 0x01	; 1
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	02 c0       	rjmp	.+4      	; 0x1ea <DIO_WritePin+0x28>
 1e6:	88 0f       	add	r24, r24
 1e8:	99 1f       	adc	r25, r25
 1ea:	6a 95       	dec	r22
 1ec:	e2 f7       	brpl	.-8      	; 0x1e6 <DIO_WritePin+0x24>
 1ee:	82 2b       	or	r24, r18
 1f0:	8b bb       	out	0x1b, r24	; 27
 1f2:	08 95       	ret
 1f4:	2b b3       	in	r18, 0x1b	; 27
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	02 c0       	rjmp	.+4      	; 0x200 <DIO_WritePin+0x3e>
 1fc:	88 0f       	add	r24, r24
 1fe:	99 1f       	adc	r25, r25
 200:	6a 95       	dec	r22
 202:	e2 f7       	brpl	.-8      	; 0x1fc <DIO_WritePin+0x3a>
 204:	80 95       	com	r24
 206:	82 23       	and	r24, r18
 208:	8b bb       	out	0x1b, r24	; 27
 20a:	08 95       	ret
 20c:	41 30       	cpi	r20, 0x01	; 1
 20e:	59 f4       	brne	.+22     	; 0x226 <DIO_WritePin+0x64>
 210:	28 b3       	in	r18, 0x18	; 24
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	02 c0       	rjmp	.+4      	; 0x21c <DIO_WritePin+0x5a>
 218:	88 0f       	add	r24, r24
 21a:	99 1f       	adc	r25, r25
 21c:	6a 95       	dec	r22
 21e:	e2 f7       	brpl	.-8      	; 0x218 <DIO_WritePin+0x56>
 220:	82 2b       	or	r24, r18
 222:	88 bb       	out	0x18, r24	; 24
 224:	08 95       	ret
 226:	28 b3       	in	r18, 0x18	; 24
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	02 c0       	rjmp	.+4      	; 0x232 <DIO_WritePin+0x70>
 22e:	88 0f       	add	r24, r24
 230:	99 1f       	adc	r25, r25
 232:	6a 95       	dec	r22
 234:	e2 f7       	brpl	.-8      	; 0x22e <DIO_WritePin+0x6c>
 236:	80 95       	com	r24
 238:	82 23       	and	r24, r18
 23a:	88 bb       	out	0x18, r24	; 24
 23c:	08 95       	ret
 23e:	41 30       	cpi	r20, 0x01	; 1
 240:	59 f4       	brne	.+22     	; 0x258 <DIO_WritePin+0x96>
 242:	25 b3       	in	r18, 0x15	; 21
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	02 c0       	rjmp	.+4      	; 0x24e <DIO_WritePin+0x8c>
 24a:	88 0f       	add	r24, r24
 24c:	99 1f       	adc	r25, r25
 24e:	6a 95       	dec	r22
 250:	e2 f7       	brpl	.-8      	; 0x24a <DIO_WritePin+0x88>
 252:	82 2b       	or	r24, r18
 254:	85 bb       	out	0x15, r24	; 21
 256:	08 95       	ret
 258:	25 b3       	in	r18, 0x15	; 21
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	02 c0       	rjmp	.+4      	; 0x264 <DIO_WritePin+0xa2>
 260:	88 0f       	add	r24, r24
 262:	99 1f       	adc	r25, r25
 264:	6a 95       	dec	r22
 266:	e2 f7       	brpl	.-8      	; 0x260 <DIO_WritePin+0x9e>
 268:	80 95       	com	r24
 26a:	82 23       	and	r24, r18
 26c:	85 bb       	out	0x15, r24	; 21
 26e:	08 95       	ret
 270:	41 30       	cpi	r20, 0x01	; 1
 272:	59 f4       	brne	.+22     	; 0x28a <DIO_WritePin+0xc8>
 274:	22 b3       	in	r18, 0x12	; 18
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	02 c0       	rjmp	.+4      	; 0x280 <DIO_WritePin+0xbe>
 27c:	88 0f       	add	r24, r24
 27e:	99 1f       	adc	r25, r25
 280:	6a 95       	dec	r22
 282:	e2 f7       	brpl	.-8      	; 0x27c <DIO_WritePin+0xba>
 284:	82 2b       	or	r24, r18
 286:	82 bb       	out	0x12, r24	; 18
 288:	08 95       	ret
 28a:	22 b3       	in	r18, 0x12	; 18
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	02 c0       	rjmp	.+4      	; 0x296 <DIO_WritePin+0xd4>
 292:	88 0f       	add	r24, r24
 294:	99 1f       	adc	r25, r25
 296:	6a 95       	dec	r22
 298:	e2 f7       	brpl	.-8      	; 0x292 <DIO_WritePin+0xd0>
 29a:	80 95       	com	r24
 29c:	82 23       	and	r24, r18
 29e:	82 bb       	out	0x12, r24	; 18
 2a0:	08 95       	ret

000002a2 <DIO_ReadPin>:
}

uint8_t DIO_ReadPin (uint8_t port,uint8_t pin)
{
uint8_t value=0;
	switch(port)
 2a2:	82 34       	cpi	r24, 0x42	; 66
 2a4:	e9 f0       	breq	.+58     	; 0x2e0 <DIO_ReadPin+0x3e>
 2a6:	18 f4       	brcc	.+6      	; 0x2ae <DIO_ReadPin+0xc>
 2a8:	81 34       	cpi	r24, 0x41	; 65
 2aa:	31 f0       	breq	.+12     	; 0x2b8 <DIO_ReadPin+0x16>
 2ac:	55 c0       	rjmp	.+170    	; 0x358 <DIO_ReadPin+0xb6>
 2ae:	83 34       	cpi	r24, 0x43	; 67
 2b0:	59 f1       	breq	.+86     	; 0x308 <DIO_ReadPin+0x66>
 2b2:	84 34       	cpi	r24, 0x44	; 68
 2b4:	e9 f1       	breq	.+122    	; 0x330 <DIO_ReadPin+0x8e>
 2b6:	50 c0       	rjmp	.+160    	; 0x358 <DIO_ReadPin+0xb6>
	{
		//portA
		case porta:
		value=((PINA&(1<<pin))>>pin);
 2b8:	49 b3       	in	r20, 0x19	; 25
 2ba:	81 e0       	ldi	r24, 0x01	; 1
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	9c 01       	movw	r18, r24
 2c0:	06 2e       	mov	r0, r22
 2c2:	02 c0       	rjmp	.+4      	; 0x2c8 <DIO_ReadPin+0x26>
 2c4:	22 0f       	add	r18, r18
 2c6:	33 1f       	adc	r19, r19
 2c8:	0a 94       	dec	r0
 2ca:	e2 f7       	brpl	.-8      	; 0x2c4 <DIO_ReadPin+0x22>
 2cc:	84 2f       	mov	r24, r20
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	82 23       	and	r24, r18
 2d2:	93 23       	and	r25, r19
 2d4:	02 c0       	rjmp	.+4      	; 0x2da <DIO_ReadPin+0x38>
 2d6:	95 95       	asr	r25
 2d8:	87 95       	ror	r24
 2da:	6a 95       	dec	r22
 2dc:	e2 f7       	brpl	.-8      	; 0x2d6 <DIO_ReadPin+0x34>
		break;
 2de:	08 95       	ret
		//portB
		case portb:
		value=((PINB&(1<<pin))>>pin);
 2e0:	46 b3       	in	r20, 0x16	; 22
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	9c 01       	movw	r18, r24
 2e8:	06 2e       	mov	r0, r22
 2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <DIO_ReadPin+0x4e>
 2ec:	22 0f       	add	r18, r18
 2ee:	33 1f       	adc	r19, r19
 2f0:	0a 94       	dec	r0
 2f2:	e2 f7       	brpl	.-8      	; 0x2ec <DIO_ReadPin+0x4a>
 2f4:	84 2f       	mov	r24, r20
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	82 23       	and	r24, r18
 2fa:	93 23       	and	r25, r19
 2fc:	02 c0       	rjmp	.+4      	; 0x302 <DIO_ReadPin+0x60>
 2fe:	95 95       	asr	r25
 300:	87 95       	ror	r24
 302:	6a 95       	dec	r22
 304:	e2 f7       	brpl	.-8      	; 0x2fe <DIO_ReadPin+0x5c>
		break;
 306:	08 95       	ret
		//portC
		case portc:
		value=((PINC&(1<<pin))>>pin);
 308:	43 b3       	in	r20, 0x13	; 19
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	9c 01       	movw	r18, r24
 310:	06 2e       	mov	r0, r22
 312:	02 c0       	rjmp	.+4      	; 0x318 <DIO_ReadPin+0x76>
 314:	22 0f       	add	r18, r18
 316:	33 1f       	adc	r19, r19
 318:	0a 94       	dec	r0
 31a:	e2 f7       	brpl	.-8      	; 0x314 <DIO_ReadPin+0x72>
 31c:	84 2f       	mov	r24, r20
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	82 23       	and	r24, r18
 322:	93 23       	and	r25, r19
 324:	02 c0       	rjmp	.+4      	; 0x32a <DIO_ReadPin+0x88>
 326:	95 95       	asr	r25
 328:	87 95       	ror	r24
 32a:	6a 95       	dec	r22
 32c:	e2 f7       	brpl	.-8      	; 0x326 <DIO_ReadPin+0x84>
		break;
 32e:	08 95       	ret
		//portD
		case portd:
		value=((PIND&(1<<pin))>>pin);
 330:	40 b3       	in	r20, 0x10	; 16
 332:	81 e0       	ldi	r24, 0x01	; 1
 334:	90 e0       	ldi	r25, 0x00	; 0
 336:	9c 01       	movw	r18, r24
 338:	06 2e       	mov	r0, r22
 33a:	02 c0       	rjmp	.+4      	; 0x340 <DIO_ReadPin+0x9e>
 33c:	22 0f       	add	r18, r18
 33e:	33 1f       	adc	r19, r19
 340:	0a 94       	dec	r0
 342:	e2 f7       	brpl	.-8      	; 0x33c <DIO_ReadPin+0x9a>
 344:	84 2f       	mov	r24, r20
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	82 23       	and	r24, r18
 34a:	93 23       	and	r25, r19
 34c:	02 c0       	rjmp	.+4      	; 0x352 <DIO_ReadPin+0xb0>
 34e:	95 95       	asr	r25
 350:	87 95       	ror	r24
 352:	6a 95       	dec	r22
 354:	e2 f7       	brpl	.-8      	; 0x34e <DIO_ReadPin+0xac>
		break;
 356:	08 95       	ret
	}
}

uint8_t DIO_ReadPin (uint8_t port,uint8_t pin)
{
uint8_t value=0;
 358:	80 e0       	ldi	r24, 0x00	; 0
		case portd:
		value=((PIND&(1<<pin))>>pin);
		break;
	}
return value;
}
 35a:	08 95       	ret

0000035c <DIO_SetPortDir>:

void DIO_SetPortDir (uint8_t port,uint8_t dir)
{
	switch(port)
 35c:	82 34       	cpi	r24, 0x42	; 66
 35e:	59 f0       	breq	.+22     	; 0x376 <DIO_SetPortDir+0x1a>
 360:	18 f4       	brcc	.+6      	; 0x368 <DIO_SetPortDir+0xc>
 362:	81 34       	cpi	r24, 0x41	; 65
 364:	31 f0       	breq	.+12     	; 0x372 <DIO_SetPortDir+0x16>
 366:	08 95       	ret
 368:	83 34       	cpi	r24, 0x43	; 67
 36a:	39 f0       	breq	.+14     	; 0x37a <DIO_SetPortDir+0x1e>
 36c:	84 34       	cpi	r24, 0x44	; 68
 36e:	39 f0       	breq	.+14     	; 0x37e <DIO_SetPortDir+0x22>
 370:	08 95       	ret
	{
		//portA
		case porta:
		DDRA=dir;
 372:	6a bb       	out	0x1a, r22	; 26
		break;
 374:	08 95       	ret
		//portB
		case portb:
		DDRB=dir;
 376:	67 bb       	out	0x17, r22	; 23
		break;
 378:	08 95       	ret
		//portC
		case portc:
		DDRC=dir;
 37a:	64 bb       	out	0x14, r22	; 20
		break;
 37c:	08 95       	ret
		//portD
		case portd:
		DDRD=dir;
 37e:	61 bb       	out	0x11, r22	; 17
 380:	08 95       	ret

00000382 <DIO_WritePort>:
		break;
	}
}
void DIO_WritePort (uint8_t port,uint8_t val)
{
	switch(port)
 382:	82 34       	cpi	r24, 0x42	; 66
 384:	59 f0       	breq	.+22     	; 0x39c <DIO_WritePort+0x1a>
 386:	18 f4       	brcc	.+6      	; 0x38e <DIO_WritePort+0xc>
 388:	81 34       	cpi	r24, 0x41	; 65
 38a:	31 f0       	breq	.+12     	; 0x398 <DIO_WritePort+0x16>
 38c:	08 95       	ret
 38e:	83 34       	cpi	r24, 0x43	; 67
 390:	39 f0       	breq	.+14     	; 0x3a0 <DIO_WritePort+0x1e>
 392:	84 34       	cpi	r24, 0x44	; 68
 394:	39 f0       	breq	.+14     	; 0x3a4 <DIO_WritePort+0x22>
 396:	08 95       	ret
	{

		//portA
		case porta:
		PORTA=val;
 398:	6b bb       	out	0x1b, r22	; 27
		break;
 39a:	08 95       	ret
		//portB
		case portb:
		PORTB=val;
 39c:	68 bb       	out	0x18, r22	; 24
		break;
 39e:	08 95       	ret
		//portC
		case portc:
		PORTC=val;
 3a0:	65 bb       	out	0x15, r22	; 21
		break;
 3a2:	08 95       	ret
		//portD
		case portd:
		PORTD=val;
 3a4:	62 bb       	out	0x12, r22	; 18
 3a6:	08 95       	ret

000003a8 <LED_Init>:
/**********************************************************************************************/
#include "DIO_interface.h"
#include "Definitions.h"
void LED_Init(uint8_t port,uint8_t pin)
{
	DIO_SetPinDir(port,pin,OUTPUT);
 3a8:	41 e0       	ldi	r20, 0x01	; 1
 3aa:	0e 94 71 00 	call	0xe2	; 0xe2 <DIO_SetPinDir>
 3ae:	08 95       	ret

000003b0 <LED_On>:
}
void LED_On(uint8_t port,uint8_t pin)
{
	DIO_WritePin(port,pin,1);
 3b0:	41 e0       	ldi	r20, 0x01	; 1
 3b2:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <DIO_WritePin>
 3b6:	08 95       	ret

000003b8 <LED_Off>:
}
void LED_Off(uint8_t port,uint8_t pin)
{
	DIO_WritePin(port,pin,0);
 3b8:	40 e0       	ldi	r20, 0x00	; 0
 3ba:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <DIO_WritePin>
 3be:	08 95       	ret

000003c0 <main>:
#include "LED_interface.h"

int main(void)
{
    /* Replace with your application code */
	SEVEN_SEG_Init(portd);
 3c0:	84 e4       	ldi	r24, 0x44	; 68
 3c2:	0e 94 41 00 	call	0x82	; 0x82 <SEVEN_SEG_Init>
	SEVEN_SEG_Init(portc);
 3c6:	83 e4       	ldi	r24, 0x43	; 67
 3c8:	0e 94 41 00 	call	0x82	; 0x82 <SEVEN_SEG_Init>
	BUTTON_Init(porta, pin0);
 3cc:	60 e0       	ldi	r22, 0x00	; 0
 3ce:	81 e4       	ldi	r24, 0x41	; 65
 3d0:	0e 94 6a 00 	call	0xd4	; 0xd4 <BUTTON_Init>
	BUTTON_Init(portb, pin0);
 3d4:	60 e0       	ldi	r22, 0x00	; 0
 3d6:	82 e4       	ldi	r24, 0x42	; 66
 3d8:	0e 94 6a 00 	call	0xd4	; 0xd4 <BUTTON_Init>
	LED_Init(portb, pin7);
 3dc:	67 e0       	ldi	r22, 0x07	; 7
 3de:	82 e4       	ldi	r24, 0x42	; 66
 3e0:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <LED_Init>
	unsigned char b1 = BUTTON_Read(porta, pin0);
 3e4:	60 e0       	ldi	r22, 0x00	; 0
 3e6:	81 e4       	ldi	r24, 0x41	; 65
 3e8:	0e 94 6e 00 	call	0xdc	; 0xdc <BUTTON_Read>
	unsigned char b2 = BUTTON_Read(portb, pin0);
 3ec:	60 e0       	ldi	r22, 0x00	; 0
 3ee:	82 e4       	ldi	r24, 0x42	; 66
 3f0:	0e 94 6e 00 	call	0xdc	; 0xdc <BUTTON_Read>
	unsigned char number1 = 0;
	unsigned char number2 = 0;
	unsigned char whole_number = 0;
	unsigned char password = 25;
	SEVEN_SEG_Write(portc, number1);
 3f4:	60 e0       	ldi	r22, 0x00	; 0
 3f6:	83 e4       	ldi	r24, 0x43	; 67
 3f8:	0e 94 45 00 	call	0x8a	; 0x8a <SEVEN_SEG_Write>
	SEVEN_SEG_Write(portd, number2);
 3fc:	60 e0       	ldi	r22, 0x00	; 0
 3fe:	84 e4       	ldi	r24, 0x44	; 68
 400:	0e 94 45 00 	call	0x8a	; 0x8a <SEVEN_SEG_Write>
	BUTTON_Init(portb, pin0);
	LED_Init(portb, pin7);
	unsigned char b1 = BUTTON_Read(porta, pin0);
	unsigned char b2 = BUTTON_Read(portb, pin0);
	unsigned char number1 = 0;
	unsigned char number2 = 0;
 404:	c0 e0       	ldi	r28, 0x00	; 0
	BUTTON_Init(porta, pin0);
	BUTTON_Init(portb, pin0);
	LED_Init(portb, pin7);
	unsigned char b1 = BUTTON_Read(porta, pin0);
	unsigned char b2 = BUTTON_Read(portb, pin0);
	unsigned char number1 = 0;
 406:	d0 e0       	ldi	r29, 0x00	; 0
	unsigned char password = 25;
	SEVEN_SEG_Write(portc, number1);
	SEVEN_SEG_Write(portd, number2);
    while (1) 
    {
		LED_Off(portb, pin7);
 408:	67 e0       	ldi	r22, 0x07	; 7
 40a:	82 e4       	ldi	r24, 0x42	; 66
 40c:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <LED_Off>
		b1 = BUTTON_Read(porta, pin0);
 410:	60 e0       	ldi	r22, 0x00	; 0
 412:	81 e4       	ldi	r24, 0x41	; 65
 414:	0e 94 6e 00 	call	0xdc	; 0xdc <BUTTON_Read>
		if(b1 == 1)
 418:	81 30       	cpi	r24, 0x01	; 1
 41a:	d1 f4       	brne	.+52     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 41c:	2f ef       	ldi	r18, 0xFF	; 255
 41e:	84 e3       	ldi	r24, 0x34	; 52
 420:	9c e0       	ldi	r25, 0x0C	; 12
 422:	21 50       	subi	r18, 0x01	; 1
 424:	80 40       	sbci	r24, 0x00	; 0
 426:	90 40       	sbci	r25, 0x00	; 0
 428:	e1 f7       	brne	.-8      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 42a:	00 c0       	rjmp	.+0      	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 42c:	00 00       	nop
		{
			_delay_ms(500);
			number2++;
 42e:	cf 5f       	subi	r28, 0xFF	; 255
			SEVEN_SEG_Write(portc, number2);
 430:	6c 2f       	mov	r22, r28
 432:	83 e4       	ldi	r24, 0x43	; 67
 434:	0e 94 45 00 	call	0x8a	; 0x8a <SEVEN_SEG_Write>
			if(number2 >= 9)
 438:	c9 30       	cpi	r28, 0x09	; 9
 43a:	50 f0       	brcs	.+20     	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
			{
				number2 = 0;
				SEVEN_SEG_Write(portc, number2);
 43c:	60 e0       	ldi	r22, 0x00	; 0
 43e:	83 e4       	ldi	r24, 0x43	; 67
 440:	0e 94 45 00 	call	0x8a	; 0x8a <SEVEN_SEG_Write>
				number1++;
 444:	df 5f       	subi	r29, 0xFF	; 255
				SEVEN_SEG_Write(portd, number1);
 446:	6d 2f       	mov	r22, r29
 448:	84 e4       	ldi	r24, 0x44	; 68
 44a:	0e 94 45 00 	call	0x8a	; 0x8a <SEVEN_SEG_Write>
			_delay_ms(500);
			number2++;
			SEVEN_SEG_Write(portc, number2);
			if(number2 >= 9)
			{
				number2 = 0;
 44e:	c0 e0       	ldi	r28, 0x00	; 0
				SEVEN_SEG_Write(portc, number2);
				number1++;
				SEVEN_SEG_Write(portd, number1);
			}
		}
		b2 = BUTTON_Read(portb, pin0);
 450:	60 e0       	ldi	r22, 0x00	; 0
 452:	82 e4       	ldi	r24, 0x42	; 66
 454:	0e 94 6e 00 	call	0xdc	; 0xdc <BUTTON_Read>
		if(b2 == 1)
 458:	81 30       	cpi	r24, 0x01	; 1
 45a:	b1 f6       	brne	.-84     	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
		{
			whole_number = (number1 * 10) + number2;
 45c:	9d 2f       	mov	r25, r29
 45e:	99 0f       	add	r25, r25
 460:	89 2f       	mov	r24, r25
 462:	88 0f       	add	r24, r24
 464:	88 0f       	add	r24, r24
 466:	89 0f       	add	r24, r25
 468:	8c 0f       	add	r24, r28
			if(whole_number == password)
 46a:	89 31       	cpi	r24, 0x19	; 25
 46c:	69 f6       	brne	.-102    	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
			{
				LED_On(portb, pin7);
 46e:	67 e0       	ldi	r22, 0x07	; 7
 470:	82 e4       	ldi	r24, 0x42	; 66
 472:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <LED_On>
 476:	2f ef       	ldi	r18, 0xFF	; 255
 478:	8d e3       	ldi	r24, 0x3D	; 61
 47a:	99 e4       	ldi	r25, 0x49	; 73
 47c:	21 50       	subi	r18, 0x01	; 1
 47e:	80 40       	sbci	r24, 0x00	; 0
 480:	90 40       	sbci	r25, 0x00	; 0
 482:	e1 f7       	brne	.-8      	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 484:	00 c0       	rjmp	.+0      	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 486:	00 00       	nop
 488:	bf cf       	rjmp	.-130    	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>

0000048a <_exit>:
 48a:	f8 94       	cli

0000048c <__stop_program>:
 48c:	ff cf       	rjmp	.-2      	; 0x48c <__stop_program>
