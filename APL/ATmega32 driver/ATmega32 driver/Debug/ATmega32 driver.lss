
ATmega32 driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000095e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000009b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000009b2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000009e4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000130  00000000  00000000  00000a20  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001e52  00000000  00000000  00000b50  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008e4  00000000  00000000  000029a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000b89  00000000  00000000  00003286  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001f4  00000000  00000000  00003e10  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005b4  00000000  00000000  00004004  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000011d5  00000000  00000000  000045b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000e0  00000000  00000000  0000578d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  28:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  30:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  34:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  3c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  54:	91 00       	.word	0x0091	; ????
  56:	a5 00       	.word	0x00a5	; ????
  58:	b9 00       	.word	0x00b9	; ????
  5a:	cd 00       	.word	0x00cd	; ????
  5c:	e1 00       	.word	0x00e1	; ????
  5e:	f5 00       	.word	0x00f5	; ????
  60:	09 01       	movw	r0, r18
  62:	1d 01       	movw	r2, r26
  64:	31 01       	movw	r6, r2
  66:	45 01       	movw	r8, r10
  68:	66 01       	movw	r12, r12
  6a:	7a 01       	movw	r14, r20
  6c:	8e 01       	movw	r16, r28
  6e:	a2 01       	movw	r20, r4
  70:	b6 01       	movw	r22, r12
  72:	ca 01       	movw	r24, r20
  74:	de 01       	movw	r26, r28
  76:	f2 01       	movw	r30, r4
  78:	06 02       	muls	r16, r22
  7a:	1a 02       	muls	r17, r26

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf e5       	ldi	r28, 0x5F	; 95
  82:	d8 e0       	ldi	r29, 0x08	; 8
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	10 e0       	ldi	r17, 0x00	; 0
  8a:	a0 e6       	ldi	r26, 0x60	; 96
  8c:	b0 e0       	ldi	r27, 0x00	; 0
  8e:	ee e5       	ldi	r30, 0x5E	; 94
  90:	f9 e0       	ldi	r31, 0x09	; 9
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a0 36       	cpi	r26, 0x60	; 96
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>
  9e:	0e 94 7f 03 	call	0x6fe	; 0x6fe <main>
  a2:	0c 94 ad 04 	jmp	0x95a	; 0x95a <_exit>

000000a6 <__bad_interrupt>:
  a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000aa <BCD_to_SEVEN_SEG_Init>:
}

void SEVEN_SEG_Blink(unsigned char port)  
{
	    #if defined CC
		DIO_WritePort(port,0x08);
  aa:	cf 93       	push	r28
  ac:	c8 2f       	mov	r28, r24
  ae:	61 11       	cpse	r22, r1
  b0:	13 c0       	rjmp	.+38     	; 0xd8 <BCD_to_SEVEN_SEG_Init+0x2e>
  b2:	41 e0       	ldi	r20, 0x01	; 1
  b4:	0e 94 36 02 	call	0x46c	; 0x46c <DIO_SetPinDir>
  b8:	41 e0       	ldi	r20, 0x01	; 1
  ba:	61 e0       	ldi	r22, 0x01	; 1
  bc:	8c 2f       	mov	r24, r28
  be:	0e 94 36 02 	call	0x46c	; 0x46c <DIO_SetPinDir>
  c2:	41 e0       	ldi	r20, 0x01	; 1
  c4:	62 e0       	ldi	r22, 0x02	; 2
  c6:	8c 2f       	mov	r24, r28
  c8:	0e 94 36 02 	call	0x46c	; 0x46c <DIO_SetPinDir>
  cc:	41 e0       	ldi	r20, 0x01	; 1
  ce:	63 e0       	ldi	r22, 0x03	; 3
  d0:	8c 2f       	mov	r24, r28
  d2:	0e 94 36 02 	call	0x46c	; 0x46c <DIO_SetPinDir>
  d6:	15 c0       	rjmp	.+42     	; 0x102 <BCD_to_SEVEN_SEG_Init+0x58>
  d8:	61 30       	cpi	r22, 0x01	; 1
  da:	99 f4       	brne	.+38     	; 0x102 <BCD_to_SEVEN_SEG_Init+0x58>
  dc:	41 e0       	ldi	r20, 0x01	; 1
  de:	64 e0       	ldi	r22, 0x04	; 4
  e0:	0e 94 36 02 	call	0x46c	; 0x46c <DIO_SetPinDir>
  e4:	41 e0       	ldi	r20, 0x01	; 1
  e6:	65 e0       	ldi	r22, 0x05	; 5
  e8:	8c 2f       	mov	r24, r28
  ea:	0e 94 36 02 	call	0x46c	; 0x46c <DIO_SetPinDir>
  ee:	41 e0       	ldi	r20, 0x01	; 1
  f0:	66 e0       	ldi	r22, 0x06	; 6
  f2:	8c 2f       	mov	r24, r28
  f4:	0e 94 36 02 	call	0x46c	; 0x46c <DIO_SetPinDir>
  f8:	41 e0       	ldi	r20, 0x01	; 1
  fa:	67 e0       	ldi	r22, 0x07	; 7
  fc:	8c 2f       	mov	r24, r28
  fe:	0e 94 36 02 	call	0x46c	; 0x46c <DIO_SetPinDir>
 102:	cf 91       	pop	r28
 104:	08 95       	ret

00000106 <BCD_to_SEVEN_SEG_Write>:
		DIO_WritePort(port,~0x08);
		#endif
}

void BCD_to_SEVEN_SEG_Write(unsigned char port, unsigned char half, unsigned char value)
{
 106:	cf 93       	push	r28
 108:	c8 2f       	mov	r28, r24
	if(half == 0)
 10a:	61 11       	cpse	r22, r1
 10c:	d2 c0       	rjmp	.+420    	; 0x2b2 <BCD_to_SEVEN_SEG_Write+0x1ac>
	{
		switch (value)
 10e:	50 e0       	ldi	r21, 0x00	; 0
 110:	4a 30       	cpi	r20, 0x0A	; 10
 112:	51 05       	cpc	r21, r1
 114:	08 f0       	brcs	.+2      	; 0x118 <BCD_to_SEVEN_SEG_Write+0x12>
 116:	a1 c1       	rjmp	.+834    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 118:	fa 01       	movw	r30, r20
 11a:	e6 5d       	subi	r30, 0xD6	; 214
 11c:	ff 4f       	sbci	r31, 0xFF	; 255
 11e:	0c 94 a7 04 	jmp	0x94e	; 0x94e <__tablejump2__>
		{
		case 0:
			DIO_WritePin(port, pin0, 0);
 122:	40 e0       	ldi	r20, 0x00	; 0
 124:	60 e0       	ldi	r22, 0x00	; 0
 126:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin1, 0);
 12a:	40 e0       	ldi	r20, 0x00	; 0
 12c:	61 e0       	ldi	r22, 0x01	; 1
 12e:	8c 2f       	mov	r24, r28
 130:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin2, 0);
 134:	40 e0       	ldi	r20, 0x00	; 0
 136:	62 e0       	ldi	r22, 0x02	; 2
 138:	8c 2f       	mov	r24, r28
 13a:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin3, 0);
 13e:	40 e0       	ldi	r20, 0x00	; 0
 140:	63 e0       	ldi	r22, 0x03	; 3
 142:	8c 2f       	mov	r24, r28
 144:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			break;
 148:	88 c1       	rjmp	.+784    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
		case 1:
			DIO_WritePin(port, pin0, 1);
 14a:	41 e0       	ldi	r20, 0x01	; 1
 14c:	60 e0       	ldi	r22, 0x00	; 0
 14e:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin1, 0);
 152:	40 e0       	ldi	r20, 0x00	; 0
 154:	61 e0       	ldi	r22, 0x01	; 1
 156:	8c 2f       	mov	r24, r28
 158:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin2, 0);
 15c:	40 e0       	ldi	r20, 0x00	; 0
 15e:	62 e0       	ldi	r22, 0x02	; 2
 160:	8c 2f       	mov	r24, r28
 162:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin3, 0);
 166:	40 e0       	ldi	r20, 0x00	; 0
 168:	63 e0       	ldi	r22, 0x03	; 3
 16a:	8c 2f       	mov	r24, r28
 16c:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			break;
 170:	74 c1       	rjmp	.+744    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
		case 2:
			DIO_WritePin(port, pin0, 0);
 172:	40 e0       	ldi	r20, 0x00	; 0
 174:	60 e0       	ldi	r22, 0x00	; 0
 176:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin1, 1);
 17a:	41 e0       	ldi	r20, 0x01	; 1
 17c:	61 e0       	ldi	r22, 0x01	; 1
 17e:	8c 2f       	mov	r24, r28
 180:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin2, 0);
 184:	40 e0       	ldi	r20, 0x00	; 0
 186:	62 e0       	ldi	r22, 0x02	; 2
 188:	8c 2f       	mov	r24, r28
 18a:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin3, 0);
 18e:	40 e0       	ldi	r20, 0x00	; 0
 190:	63 e0       	ldi	r22, 0x03	; 3
 192:	8c 2f       	mov	r24, r28
 194:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			break;
 198:	60 c1       	rjmp	.+704    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
		case 3:
			DIO_WritePin(port, pin0, 1);
 19a:	41 e0       	ldi	r20, 0x01	; 1
 19c:	60 e0       	ldi	r22, 0x00	; 0
 19e:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin1, 1);
 1a2:	41 e0       	ldi	r20, 0x01	; 1
 1a4:	61 e0       	ldi	r22, 0x01	; 1
 1a6:	8c 2f       	mov	r24, r28
 1a8:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin2, 0);
 1ac:	40 e0       	ldi	r20, 0x00	; 0
 1ae:	62 e0       	ldi	r22, 0x02	; 2
 1b0:	8c 2f       	mov	r24, r28
 1b2:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin3, 0);
 1b6:	40 e0       	ldi	r20, 0x00	; 0
 1b8:	63 e0       	ldi	r22, 0x03	; 3
 1ba:	8c 2f       	mov	r24, r28
 1bc:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			break;
 1c0:	4c c1       	rjmp	.+664    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
		case 4:
			DIO_WritePin(port, pin0, 0);
 1c2:	40 e0       	ldi	r20, 0x00	; 0
 1c4:	60 e0       	ldi	r22, 0x00	; 0
 1c6:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin1, 0);
 1ca:	40 e0       	ldi	r20, 0x00	; 0
 1cc:	61 e0       	ldi	r22, 0x01	; 1
 1ce:	8c 2f       	mov	r24, r28
 1d0:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin2, 1);
 1d4:	41 e0       	ldi	r20, 0x01	; 1
 1d6:	62 e0       	ldi	r22, 0x02	; 2
 1d8:	8c 2f       	mov	r24, r28
 1da:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin3, 0);
 1de:	40 e0       	ldi	r20, 0x00	; 0
 1e0:	63 e0       	ldi	r22, 0x03	; 3
 1e2:	8c 2f       	mov	r24, r28
 1e4:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			break;
 1e8:	38 c1       	rjmp	.+624    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
		case 5:
			DIO_WritePin(port, pin0, 1);
 1ea:	41 e0       	ldi	r20, 0x01	; 1
 1ec:	60 e0       	ldi	r22, 0x00	; 0
 1ee:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin1, 0);
 1f2:	40 e0       	ldi	r20, 0x00	; 0
 1f4:	61 e0       	ldi	r22, 0x01	; 1
 1f6:	8c 2f       	mov	r24, r28
 1f8:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin2, 1);
 1fc:	41 e0       	ldi	r20, 0x01	; 1
 1fe:	62 e0       	ldi	r22, 0x02	; 2
 200:	8c 2f       	mov	r24, r28
 202:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin3, 0);
 206:	40 e0       	ldi	r20, 0x00	; 0
 208:	63 e0       	ldi	r22, 0x03	; 3
 20a:	8c 2f       	mov	r24, r28
 20c:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			break;
 210:	24 c1       	rjmp	.+584    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
		case 6:
			DIO_WritePin(port, pin0, 0);
 212:	40 e0       	ldi	r20, 0x00	; 0
 214:	60 e0       	ldi	r22, 0x00	; 0
 216:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin1, 1);
 21a:	41 e0       	ldi	r20, 0x01	; 1
 21c:	61 e0       	ldi	r22, 0x01	; 1
 21e:	8c 2f       	mov	r24, r28
 220:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin2, 1);
 224:	41 e0       	ldi	r20, 0x01	; 1
 226:	62 e0       	ldi	r22, 0x02	; 2
 228:	8c 2f       	mov	r24, r28
 22a:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin3, 0);
 22e:	40 e0       	ldi	r20, 0x00	; 0
 230:	63 e0       	ldi	r22, 0x03	; 3
 232:	8c 2f       	mov	r24, r28
 234:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			break;
 238:	10 c1       	rjmp	.+544    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
		case 7:
			DIO_WritePin(port, pin0, 1);
 23a:	41 e0       	ldi	r20, 0x01	; 1
 23c:	60 e0       	ldi	r22, 0x00	; 0
 23e:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin1, 1);
 242:	41 e0       	ldi	r20, 0x01	; 1
 244:	61 e0       	ldi	r22, 0x01	; 1
 246:	8c 2f       	mov	r24, r28
 248:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin2, 1);
 24c:	41 e0       	ldi	r20, 0x01	; 1
 24e:	62 e0       	ldi	r22, 0x02	; 2
 250:	8c 2f       	mov	r24, r28
 252:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin3, 0);
 256:	40 e0       	ldi	r20, 0x00	; 0
 258:	63 e0       	ldi	r22, 0x03	; 3
 25a:	8c 2f       	mov	r24, r28
 25c:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			break;
 260:	fc c0       	rjmp	.+504    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
		case 8:
			DIO_WritePin(port, pin0, 0);
 262:	40 e0       	ldi	r20, 0x00	; 0
 264:	60 e0       	ldi	r22, 0x00	; 0
 266:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin1, 0);
 26a:	40 e0       	ldi	r20, 0x00	; 0
 26c:	61 e0       	ldi	r22, 0x01	; 1
 26e:	8c 2f       	mov	r24, r28
 270:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin2, 0);
 274:	40 e0       	ldi	r20, 0x00	; 0
 276:	62 e0       	ldi	r22, 0x02	; 2
 278:	8c 2f       	mov	r24, r28
 27a:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin3, 1);
 27e:	41 e0       	ldi	r20, 0x01	; 1
 280:	63 e0       	ldi	r22, 0x03	; 3
 282:	8c 2f       	mov	r24, r28
 284:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			break;
 288:	e8 c0       	rjmp	.+464    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
		case 9:
			DIO_WritePin(port, pin0, 1);
 28a:	41 e0       	ldi	r20, 0x01	; 1
 28c:	60 e0       	ldi	r22, 0x00	; 0
 28e:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin1, 0);
 292:	40 e0       	ldi	r20, 0x00	; 0
 294:	61 e0       	ldi	r22, 0x01	; 1
 296:	8c 2f       	mov	r24, r28
 298:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin2, 0);
 29c:	40 e0       	ldi	r20, 0x00	; 0
 29e:	62 e0       	ldi	r22, 0x02	; 2
 2a0:	8c 2f       	mov	r24, r28
 2a2:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			DIO_WritePin(port, pin3, 1);
 2a6:	41 e0       	ldi	r20, 0x01	; 1
 2a8:	63 e0       	ldi	r22, 0x03	; 3
 2aa:	8c 2f       	mov	r24, r28
 2ac:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
			break;
 2b0:	d4 c0       	rjmp	.+424    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
		default:
			break;
		}
	}
	else if(half == 1)
 2b2:	61 30       	cpi	r22, 0x01	; 1
 2b4:	09 f0       	breq	.+2      	; 0x2b8 <BCD_to_SEVEN_SEG_Write+0x1b2>
 2b6:	d1 c0       	rjmp	.+418    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
	{
		switch (value)
 2b8:	50 e0       	ldi	r21, 0x00	; 0
 2ba:	4a 30       	cpi	r20, 0x0A	; 10
 2bc:	51 05       	cpc	r21, r1
 2be:	08 f0       	brcs	.+2      	; 0x2c2 <BCD_to_SEVEN_SEG_Write+0x1bc>
 2c0:	cc c0       	rjmp	.+408    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 2c2:	fa 01       	movw	r30, r20
 2c4:	ec 5c       	subi	r30, 0xCC	; 204
 2c6:	ff 4f       	sbci	r31, 0xFF	; 255
 2c8:	0c 94 a7 04 	jmp	0x94e	; 0x94e <__tablejump2__>
			{
			case 0:
				DIO_WritePin(port, pin4, 0);
 2cc:	40 e0       	ldi	r20, 0x00	; 0
 2ce:	64 e0       	ldi	r22, 0x04	; 4
 2d0:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin5, 0);
 2d4:	40 e0       	ldi	r20, 0x00	; 0
 2d6:	65 e0       	ldi	r22, 0x05	; 5
 2d8:	8c 2f       	mov	r24, r28
 2da:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin6, 0);
 2de:	40 e0       	ldi	r20, 0x00	; 0
 2e0:	66 e0       	ldi	r22, 0x06	; 6
 2e2:	8c 2f       	mov	r24, r28
 2e4:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin7, 0);
 2e8:	40 e0       	ldi	r20, 0x00	; 0
 2ea:	67 e0       	ldi	r22, 0x07	; 7
 2ec:	8c 2f       	mov	r24, r28
 2ee:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				break;
 2f2:	b3 c0       	rjmp	.+358    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
			case 1:
				DIO_WritePin(port, pin4, 1);
 2f4:	41 e0       	ldi	r20, 0x01	; 1
 2f6:	64 e0       	ldi	r22, 0x04	; 4
 2f8:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin5, 0);
 2fc:	40 e0       	ldi	r20, 0x00	; 0
 2fe:	65 e0       	ldi	r22, 0x05	; 5
 300:	8c 2f       	mov	r24, r28
 302:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin6, 0);
 306:	40 e0       	ldi	r20, 0x00	; 0
 308:	66 e0       	ldi	r22, 0x06	; 6
 30a:	8c 2f       	mov	r24, r28
 30c:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin7, 0);
 310:	40 e0       	ldi	r20, 0x00	; 0
 312:	67 e0       	ldi	r22, 0x07	; 7
 314:	8c 2f       	mov	r24, r28
 316:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				break;
 31a:	9f c0       	rjmp	.+318    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
			case 2:
				DIO_WritePin(port, pin4, 0);
 31c:	40 e0       	ldi	r20, 0x00	; 0
 31e:	64 e0       	ldi	r22, 0x04	; 4
 320:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin5, 1);
 324:	41 e0       	ldi	r20, 0x01	; 1
 326:	65 e0       	ldi	r22, 0x05	; 5
 328:	8c 2f       	mov	r24, r28
 32a:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin6, 0);
 32e:	40 e0       	ldi	r20, 0x00	; 0
 330:	66 e0       	ldi	r22, 0x06	; 6
 332:	8c 2f       	mov	r24, r28
 334:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin7, 0);
 338:	40 e0       	ldi	r20, 0x00	; 0
 33a:	67 e0       	ldi	r22, 0x07	; 7
 33c:	8c 2f       	mov	r24, r28
 33e:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				break;
 342:	8b c0       	rjmp	.+278    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
			case 3:
				DIO_WritePin(port, pin4, 1);
 344:	41 e0       	ldi	r20, 0x01	; 1
 346:	64 e0       	ldi	r22, 0x04	; 4
 348:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin5, 1);
 34c:	41 e0       	ldi	r20, 0x01	; 1
 34e:	65 e0       	ldi	r22, 0x05	; 5
 350:	8c 2f       	mov	r24, r28
 352:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin6, 0);
 356:	40 e0       	ldi	r20, 0x00	; 0
 358:	66 e0       	ldi	r22, 0x06	; 6
 35a:	8c 2f       	mov	r24, r28
 35c:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin7, 0);
 360:	40 e0       	ldi	r20, 0x00	; 0
 362:	67 e0       	ldi	r22, 0x07	; 7
 364:	8c 2f       	mov	r24, r28
 366:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				break;
 36a:	77 c0       	rjmp	.+238    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
			case 4:
				DIO_WritePin(port, pin4, 0);
 36c:	40 e0       	ldi	r20, 0x00	; 0
 36e:	64 e0       	ldi	r22, 0x04	; 4
 370:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin5, 0);
 374:	40 e0       	ldi	r20, 0x00	; 0
 376:	65 e0       	ldi	r22, 0x05	; 5
 378:	8c 2f       	mov	r24, r28
 37a:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin6, 1);
 37e:	41 e0       	ldi	r20, 0x01	; 1
 380:	66 e0       	ldi	r22, 0x06	; 6
 382:	8c 2f       	mov	r24, r28
 384:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin7, 0);
 388:	40 e0       	ldi	r20, 0x00	; 0
 38a:	67 e0       	ldi	r22, 0x07	; 7
 38c:	8c 2f       	mov	r24, r28
 38e:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				break;
 392:	63 c0       	rjmp	.+198    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
			case 5:
				DIO_WritePin(port, pin4, 1);
 394:	41 e0       	ldi	r20, 0x01	; 1
 396:	64 e0       	ldi	r22, 0x04	; 4
 398:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin5, 0);
 39c:	40 e0       	ldi	r20, 0x00	; 0
 39e:	65 e0       	ldi	r22, 0x05	; 5
 3a0:	8c 2f       	mov	r24, r28
 3a2:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin6, 1);
 3a6:	41 e0       	ldi	r20, 0x01	; 1
 3a8:	66 e0       	ldi	r22, 0x06	; 6
 3aa:	8c 2f       	mov	r24, r28
 3ac:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin7, 0);
 3b0:	40 e0       	ldi	r20, 0x00	; 0
 3b2:	67 e0       	ldi	r22, 0x07	; 7
 3b4:	8c 2f       	mov	r24, r28
 3b6:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				break;
 3ba:	4f c0       	rjmp	.+158    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
			case 6:
				DIO_WritePin(port, pin4, 0);
 3bc:	40 e0       	ldi	r20, 0x00	; 0
 3be:	64 e0       	ldi	r22, 0x04	; 4
 3c0:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin5, 1);
 3c4:	41 e0       	ldi	r20, 0x01	; 1
 3c6:	65 e0       	ldi	r22, 0x05	; 5
 3c8:	8c 2f       	mov	r24, r28
 3ca:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin6, 1);
 3ce:	41 e0       	ldi	r20, 0x01	; 1
 3d0:	66 e0       	ldi	r22, 0x06	; 6
 3d2:	8c 2f       	mov	r24, r28
 3d4:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin7, 0);
 3d8:	40 e0       	ldi	r20, 0x00	; 0
 3da:	67 e0       	ldi	r22, 0x07	; 7
 3dc:	8c 2f       	mov	r24, r28
 3de:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				break;
 3e2:	3b c0       	rjmp	.+118    	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
			case 7:
				DIO_WritePin(port, pin4, 1);
 3e4:	41 e0       	ldi	r20, 0x01	; 1
 3e6:	64 e0       	ldi	r22, 0x04	; 4
 3e8:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin5, 1);
 3ec:	41 e0       	ldi	r20, 0x01	; 1
 3ee:	65 e0       	ldi	r22, 0x05	; 5
 3f0:	8c 2f       	mov	r24, r28
 3f2:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin6, 1);
 3f6:	41 e0       	ldi	r20, 0x01	; 1
 3f8:	66 e0       	ldi	r22, 0x06	; 6
 3fa:	8c 2f       	mov	r24, r28
 3fc:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin7, 0);
 400:	40 e0       	ldi	r20, 0x00	; 0
 402:	67 e0       	ldi	r22, 0x07	; 7
 404:	8c 2f       	mov	r24, r28
 406:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				break;
 40a:	27 c0       	rjmp	.+78     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
			case 8:
				DIO_WritePin(port, pin4, 0);
 40c:	40 e0       	ldi	r20, 0x00	; 0
 40e:	64 e0       	ldi	r22, 0x04	; 4
 410:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin5, 0);
 414:	40 e0       	ldi	r20, 0x00	; 0
 416:	65 e0       	ldi	r22, 0x05	; 5
 418:	8c 2f       	mov	r24, r28
 41a:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin6, 0);
 41e:	40 e0       	ldi	r20, 0x00	; 0
 420:	66 e0       	ldi	r22, 0x06	; 6
 422:	8c 2f       	mov	r24, r28
 424:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin7, 1);
 428:	41 e0       	ldi	r20, 0x01	; 1
 42a:	67 e0       	ldi	r22, 0x07	; 7
 42c:	8c 2f       	mov	r24, r28
 42e:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				break;
 432:	13 c0       	rjmp	.+38     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
			case 9:
				DIO_WritePin(port, pin4, 1);
 434:	41 e0       	ldi	r20, 0x01	; 1
 436:	64 e0       	ldi	r22, 0x04	; 4
 438:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin5, 0);
 43c:	40 e0       	ldi	r20, 0x00	; 0
 43e:	65 e0       	ldi	r22, 0x05	; 5
 440:	8c 2f       	mov	r24, r28
 442:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin6, 0);
 446:	40 e0       	ldi	r20, 0x00	; 0
 448:	66 e0       	ldi	r22, 0x06	; 6
 44a:	8c 2f       	mov	r24, r28
 44c:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				DIO_WritePin(port, pin7, 1);
 450:	41 e0       	ldi	r20, 0x01	; 1
 452:	67 e0       	ldi	r22, 0x07	; 7
 454:	8c 2f       	mov	r24, r28
 456:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
				break;
			default:
				break;
			}
	}
 45a:	cf 91       	pop	r28
 45c:	08 95       	ret

0000045e <BUTTON_Init>:

#include "DIO_interface.h"
#include "BUTTON_interface.h"
void BUTTON_Init(unsigned char port,unsigned char pin)
{
	DIO_SetPinDir(port,pin,0);
 45e:	40 e0       	ldi	r20, 0x00	; 0
 460:	0e 94 36 02 	call	0x46c	; 0x46c <DIO_SetPinDir>
 464:	08 95       	ret

00000466 <BUTTON_Read>:
}
unsigned char BUTTON_Read(unsigned char port,unsigned char pin)
{
	unsigned char x;
	x= DIO_ReadPin(port,pin);
 466:	0e 94 16 03 	call	0x62c	; 0x62c <DIO_ReadPin>
	return x;
}
 46a:	08 95       	ret

0000046c <DIO_SetPinDir>:
		case portc:
			PORTC^=(1<<pin);
		break;
		//portD
		case portd:
			PORTD^=(1<<pin);
 46c:	82 34       	cpi	r24, 0x42	; 66
 46e:	19 f1       	breq	.+70     	; 0x4b6 <DIO_SetPinDir+0x4a>
 470:	18 f4       	brcc	.+6      	; 0x478 <DIO_SetPinDir+0xc>
 472:	81 34       	cpi	r24, 0x41	; 65
 474:	39 f0       	breq	.+14     	; 0x484 <DIO_SetPinDir+0x18>
 476:	08 95       	ret
 478:	83 34       	cpi	r24, 0x43	; 67
 47a:	b1 f1       	breq	.+108    	; 0x4e8 <DIO_SetPinDir+0x7c>
 47c:	84 34       	cpi	r24, 0x44	; 68
 47e:	09 f4       	brne	.+2      	; 0x482 <DIO_SetPinDir+0x16>
 480:	4c c0       	rjmp	.+152    	; 0x51a <DIO_SetPinDir+0xae>
 482:	08 95       	ret
 484:	41 30       	cpi	r20, 0x01	; 1
 486:	59 f4       	brne	.+22     	; 0x49e <DIO_SetPinDir+0x32>
 488:	2a b3       	in	r18, 0x1a	; 26
 48a:	81 e0       	ldi	r24, 0x01	; 1
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	02 c0       	rjmp	.+4      	; 0x494 <DIO_SetPinDir+0x28>
 490:	88 0f       	add	r24, r24
 492:	99 1f       	adc	r25, r25
 494:	6a 95       	dec	r22
 496:	e2 f7       	brpl	.-8      	; 0x490 <DIO_SetPinDir+0x24>
 498:	82 2b       	or	r24, r18
 49a:	8a bb       	out	0x1a, r24	; 26
 49c:	08 95       	ret
 49e:	2a b3       	in	r18, 0x1a	; 26
 4a0:	81 e0       	ldi	r24, 0x01	; 1
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	02 c0       	rjmp	.+4      	; 0x4aa <DIO_SetPinDir+0x3e>
 4a6:	88 0f       	add	r24, r24
 4a8:	99 1f       	adc	r25, r25
 4aa:	6a 95       	dec	r22
 4ac:	e2 f7       	brpl	.-8      	; 0x4a6 <DIO_SetPinDir+0x3a>
 4ae:	80 95       	com	r24
 4b0:	82 23       	and	r24, r18
 4b2:	8a bb       	out	0x1a, r24	; 26
 4b4:	08 95       	ret
 4b6:	41 30       	cpi	r20, 0x01	; 1
 4b8:	59 f4       	brne	.+22     	; 0x4d0 <DIO_SetPinDir+0x64>
 4ba:	27 b3       	in	r18, 0x17	; 23
 4bc:	81 e0       	ldi	r24, 0x01	; 1
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	02 c0       	rjmp	.+4      	; 0x4c6 <DIO_SetPinDir+0x5a>
 4c2:	88 0f       	add	r24, r24
 4c4:	99 1f       	adc	r25, r25
 4c6:	6a 95       	dec	r22
 4c8:	e2 f7       	brpl	.-8      	; 0x4c2 <DIO_SetPinDir+0x56>
 4ca:	82 2b       	or	r24, r18
 4cc:	87 bb       	out	0x17, r24	; 23
 4ce:	08 95       	ret
 4d0:	27 b3       	in	r18, 0x17	; 23
 4d2:	81 e0       	ldi	r24, 0x01	; 1
 4d4:	90 e0       	ldi	r25, 0x00	; 0
 4d6:	02 c0       	rjmp	.+4      	; 0x4dc <DIO_SetPinDir+0x70>
 4d8:	88 0f       	add	r24, r24
 4da:	99 1f       	adc	r25, r25
 4dc:	6a 95       	dec	r22
 4de:	e2 f7       	brpl	.-8      	; 0x4d8 <DIO_SetPinDir+0x6c>
 4e0:	80 95       	com	r24
 4e2:	82 23       	and	r24, r18
 4e4:	87 bb       	out	0x17, r24	; 23
 4e6:	08 95       	ret
 4e8:	41 30       	cpi	r20, 0x01	; 1
 4ea:	59 f4       	brne	.+22     	; 0x502 <DIO_SetPinDir+0x96>
 4ec:	24 b3       	in	r18, 0x14	; 20
 4ee:	81 e0       	ldi	r24, 0x01	; 1
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	02 c0       	rjmp	.+4      	; 0x4f8 <DIO_SetPinDir+0x8c>
 4f4:	88 0f       	add	r24, r24
 4f6:	99 1f       	adc	r25, r25
 4f8:	6a 95       	dec	r22
 4fa:	e2 f7       	brpl	.-8      	; 0x4f4 <DIO_SetPinDir+0x88>
 4fc:	82 2b       	or	r24, r18
 4fe:	84 bb       	out	0x14, r24	; 20
 500:	08 95       	ret
 502:	24 b3       	in	r18, 0x14	; 20
 504:	81 e0       	ldi	r24, 0x01	; 1
 506:	90 e0       	ldi	r25, 0x00	; 0
 508:	02 c0       	rjmp	.+4      	; 0x50e <DIO_SetPinDir+0xa2>
 50a:	88 0f       	add	r24, r24
 50c:	99 1f       	adc	r25, r25
 50e:	6a 95       	dec	r22
 510:	e2 f7       	brpl	.-8      	; 0x50a <DIO_SetPinDir+0x9e>
 512:	80 95       	com	r24
 514:	82 23       	and	r24, r18
 516:	84 bb       	out	0x14, r24	; 20
 518:	08 95       	ret
 51a:	41 30       	cpi	r20, 0x01	; 1
 51c:	59 f4       	brne	.+22     	; 0x534 <DIO_SetPinDir+0xc8>
 51e:	21 b3       	in	r18, 0x11	; 17
 520:	81 e0       	ldi	r24, 0x01	; 1
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	02 c0       	rjmp	.+4      	; 0x52a <DIO_SetPinDir+0xbe>
 526:	88 0f       	add	r24, r24
 528:	99 1f       	adc	r25, r25
 52a:	6a 95       	dec	r22
 52c:	e2 f7       	brpl	.-8      	; 0x526 <DIO_SetPinDir+0xba>
 52e:	82 2b       	or	r24, r18
 530:	81 bb       	out	0x11, r24	; 17
 532:	08 95       	ret
 534:	21 b3       	in	r18, 0x11	; 17
 536:	81 e0       	ldi	r24, 0x01	; 1
 538:	90 e0       	ldi	r25, 0x00	; 0
 53a:	02 c0       	rjmp	.+4      	; 0x540 <DIO_SetPinDir+0xd4>
 53c:	88 0f       	add	r24, r24
 53e:	99 1f       	adc	r25, r25
 540:	6a 95       	dec	r22
 542:	e2 f7       	brpl	.-8      	; 0x53c <DIO_SetPinDir+0xd0>
 544:	80 95       	com	r24
 546:	82 23       	and	r24, r18
 548:	81 bb       	out	0x11, r24	; 17
 54a:	08 95       	ret

0000054c <DIO_WritePin>:
 54c:	82 34       	cpi	r24, 0x42	; 66
 54e:	19 f1       	breq	.+70     	; 0x596 <DIO_WritePin+0x4a>
 550:	18 f4       	brcc	.+6      	; 0x558 <DIO_WritePin+0xc>
 552:	81 34       	cpi	r24, 0x41	; 65
 554:	39 f0       	breq	.+14     	; 0x564 <DIO_WritePin+0x18>
 556:	08 95       	ret
 558:	83 34       	cpi	r24, 0x43	; 67
 55a:	b1 f1       	breq	.+108    	; 0x5c8 <DIO_WritePin+0x7c>
 55c:	84 34       	cpi	r24, 0x44	; 68
 55e:	09 f4       	brne	.+2      	; 0x562 <DIO_WritePin+0x16>
 560:	4c c0       	rjmp	.+152    	; 0x5fa <DIO_WritePin+0xae>
 562:	08 95       	ret
 564:	41 30       	cpi	r20, 0x01	; 1
 566:	59 f4       	brne	.+22     	; 0x57e <DIO_WritePin+0x32>
 568:	2b b3       	in	r18, 0x1b	; 27
 56a:	81 e0       	ldi	r24, 0x01	; 1
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	02 c0       	rjmp	.+4      	; 0x574 <DIO_WritePin+0x28>
 570:	88 0f       	add	r24, r24
 572:	99 1f       	adc	r25, r25
 574:	6a 95       	dec	r22
 576:	e2 f7       	brpl	.-8      	; 0x570 <DIO_WritePin+0x24>
 578:	82 2b       	or	r24, r18
 57a:	8b bb       	out	0x1b, r24	; 27
 57c:	08 95       	ret
 57e:	2b b3       	in	r18, 0x1b	; 27
 580:	81 e0       	ldi	r24, 0x01	; 1
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	02 c0       	rjmp	.+4      	; 0x58a <DIO_WritePin+0x3e>
 586:	88 0f       	add	r24, r24
 588:	99 1f       	adc	r25, r25
 58a:	6a 95       	dec	r22
 58c:	e2 f7       	brpl	.-8      	; 0x586 <DIO_WritePin+0x3a>
 58e:	80 95       	com	r24
 590:	82 23       	and	r24, r18
 592:	8b bb       	out	0x1b, r24	; 27
 594:	08 95       	ret
 596:	41 30       	cpi	r20, 0x01	; 1
 598:	59 f4       	brne	.+22     	; 0x5b0 <DIO_WritePin+0x64>
 59a:	28 b3       	in	r18, 0x18	; 24
 59c:	81 e0       	ldi	r24, 0x01	; 1
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	02 c0       	rjmp	.+4      	; 0x5a6 <DIO_WritePin+0x5a>
 5a2:	88 0f       	add	r24, r24
 5a4:	99 1f       	adc	r25, r25
 5a6:	6a 95       	dec	r22
 5a8:	e2 f7       	brpl	.-8      	; 0x5a2 <DIO_WritePin+0x56>
 5aa:	82 2b       	or	r24, r18
 5ac:	88 bb       	out	0x18, r24	; 24
 5ae:	08 95       	ret
 5b0:	28 b3       	in	r18, 0x18	; 24
 5b2:	81 e0       	ldi	r24, 0x01	; 1
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	02 c0       	rjmp	.+4      	; 0x5bc <DIO_WritePin+0x70>
 5b8:	88 0f       	add	r24, r24
 5ba:	99 1f       	adc	r25, r25
 5bc:	6a 95       	dec	r22
 5be:	e2 f7       	brpl	.-8      	; 0x5b8 <DIO_WritePin+0x6c>
 5c0:	80 95       	com	r24
 5c2:	82 23       	and	r24, r18
 5c4:	88 bb       	out	0x18, r24	; 24
 5c6:	08 95       	ret
 5c8:	41 30       	cpi	r20, 0x01	; 1
 5ca:	59 f4       	brne	.+22     	; 0x5e2 <DIO_WritePin+0x96>
 5cc:	25 b3       	in	r18, 0x15	; 21
 5ce:	81 e0       	ldi	r24, 0x01	; 1
 5d0:	90 e0       	ldi	r25, 0x00	; 0
 5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <DIO_WritePin+0x8c>
 5d4:	88 0f       	add	r24, r24
 5d6:	99 1f       	adc	r25, r25
 5d8:	6a 95       	dec	r22
 5da:	e2 f7       	brpl	.-8      	; 0x5d4 <DIO_WritePin+0x88>
 5dc:	82 2b       	or	r24, r18
 5de:	85 bb       	out	0x15, r24	; 21
 5e0:	08 95       	ret
 5e2:	25 b3       	in	r18, 0x15	; 21
 5e4:	81 e0       	ldi	r24, 0x01	; 1
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	02 c0       	rjmp	.+4      	; 0x5ee <DIO_WritePin+0xa2>
 5ea:	88 0f       	add	r24, r24
 5ec:	99 1f       	adc	r25, r25
 5ee:	6a 95       	dec	r22
 5f0:	e2 f7       	brpl	.-8      	; 0x5ea <DIO_WritePin+0x9e>
 5f2:	80 95       	com	r24
 5f4:	82 23       	and	r24, r18
 5f6:	85 bb       	out	0x15, r24	; 21
 5f8:	08 95       	ret
 5fa:	41 30       	cpi	r20, 0x01	; 1
 5fc:	59 f4       	brne	.+22     	; 0x614 <DIO_WritePin+0xc8>
 5fe:	22 b3       	in	r18, 0x12	; 18
 600:	81 e0       	ldi	r24, 0x01	; 1
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	02 c0       	rjmp	.+4      	; 0x60a <DIO_WritePin+0xbe>
 606:	88 0f       	add	r24, r24
 608:	99 1f       	adc	r25, r25
 60a:	6a 95       	dec	r22
 60c:	e2 f7       	brpl	.-8      	; 0x606 <DIO_WritePin+0xba>
 60e:	82 2b       	or	r24, r18
 610:	82 bb       	out	0x12, r24	; 18
 612:	08 95       	ret
 614:	22 b3       	in	r18, 0x12	; 18
 616:	81 e0       	ldi	r24, 0x01	; 1
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	02 c0       	rjmp	.+4      	; 0x620 <DIO_WritePin+0xd4>
 61c:	88 0f       	add	r24, r24
 61e:	99 1f       	adc	r25, r25
 620:	6a 95       	dec	r22
 622:	e2 f7       	brpl	.-8      	; 0x61c <DIO_WritePin+0xd0>
 624:	80 95       	com	r24
 626:	82 23       	and	r24, r18
 628:	82 bb       	out	0x12, r24	; 18
 62a:	08 95       	ret

0000062c <DIO_ReadPin>:
}

uint8_t DIO_ReadPin (uint8_t port,uint8_t pin)
{
uint8_t value=0;
	switch(port)
 62c:	82 34       	cpi	r24, 0x42	; 66
 62e:	e9 f0       	breq	.+58     	; 0x66a <DIO_ReadPin+0x3e>
 630:	18 f4       	brcc	.+6      	; 0x638 <DIO_ReadPin+0xc>
 632:	81 34       	cpi	r24, 0x41	; 65
 634:	31 f0       	breq	.+12     	; 0x642 <DIO_ReadPin+0x16>
 636:	55 c0       	rjmp	.+170    	; 0x6e2 <DIO_ReadPin+0xb6>
 638:	83 34       	cpi	r24, 0x43	; 67
 63a:	59 f1       	breq	.+86     	; 0x692 <DIO_ReadPin+0x66>
 63c:	84 34       	cpi	r24, 0x44	; 68
 63e:	e9 f1       	breq	.+122    	; 0x6ba <DIO_ReadPin+0x8e>
 640:	50 c0       	rjmp	.+160    	; 0x6e2 <DIO_ReadPin+0xb6>
	{
		//portA
		case porta:
		value=((PINA&(1<<pin))>>pin);
 642:	49 b3       	in	r20, 0x19	; 25
 644:	81 e0       	ldi	r24, 0x01	; 1
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	9c 01       	movw	r18, r24
 64a:	06 2e       	mov	r0, r22
 64c:	02 c0       	rjmp	.+4      	; 0x652 <DIO_ReadPin+0x26>
 64e:	22 0f       	add	r18, r18
 650:	33 1f       	adc	r19, r19
 652:	0a 94       	dec	r0
 654:	e2 f7       	brpl	.-8      	; 0x64e <DIO_ReadPin+0x22>
 656:	84 2f       	mov	r24, r20
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	82 23       	and	r24, r18
 65c:	93 23       	and	r25, r19
 65e:	02 c0       	rjmp	.+4      	; 0x664 <DIO_ReadPin+0x38>
 660:	95 95       	asr	r25
 662:	87 95       	ror	r24
 664:	6a 95       	dec	r22
 666:	e2 f7       	brpl	.-8      	; 0x660 <DIO_ReadPin+0x34>
		break;
 668:	08 95       	ret
		//portB
		case portb:
		value=((PINB&(1<<pin))>>pin);
 66a:	46 b3       	in	r20, 0x16	; 22
 66c:	81 e0       	ldi	r24, 0x01	; 1
 66e:	90 e0       	ldi	r25, 0x00	; 0
 670:	9c 01       	movw	r18, r24
 672:	06 2e       	mov	r0, r22
 674:	02 c0       	rjmp	.+4      	; 0x67a <DIO_ReadPin+0x4e>
 676:	22 0f       	add	r18, r18
 678:	33 1f       	adc	r19, r19
 67a:	0a 94       	dec	r0
 67c:	e2 f7       	brpl	.-8      	; 0x676 <DIO_ReadPin+0x4a>
 67e:	84 2f       	mov	r24, r20
 680:	90 e0       	ldi	r25, 0x00	; 0
 682:	82 23       	and	r24, r18
 684:	93 23       	and	r25, r19
 686:	02 c0       	rjmp	.+4      	; 0x68c <DIO_ReadPin+0x60>
 688:	95 95       	asr	r25
 68a:	87 95       	ror	r24
 68c:	6a 95       	dec	r22
 68e:	e2 f7       	brpl	.-8      	; 0x688 <DIO_ReadPin+0x5c>
		break;
 690:	08 95       	ret
		//portC
		case portc:
		value=((PINC&(1<<pin))>>pin);
 692:	43 b3       	in	r20, 0x13	; 19
 694:	81 e0       	ldi	r24, 0x01	; 1
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	9c 01       	movw	r18, r24
 69a:	06 2e       	mov	r0, r22
 69c:	02 c0       	rjmp	.+4      	; 0x6a2 <DIO_ReadPin+0x76>
 69e:	22 0f       	add	r18, r18
 6a0:	33 1f       	adc	r19, r19
 6a2:	0a 94       	dec	r0
 6a4:	e2 f7       	brpl	.-8      	; 0x69e <DIO_ReadPin+0x72>
 6a6:	84 2f       	mov	r24, r20
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	82 23       	and	r24, r18
 6ac:	93 23       	and	r25, r19
 6ae:	02 c0       	rjmp	.+4      	; 0x6b4 <DIO_ReadPin+0x88>
 6b0:	95 95       	asr	r25
 6b2:	87 95       	ror	r24
 6b4:	6a 95       	dec	r22
 6b6:	e2 f7       	brpl	.-8      	; 0x6b0 <DIO_ReadPin+0x84>
		break;
 6b8:	08 95       	ret
		//portD
		case portd:
		value=((PIND&(1<<pin))>>pin);
 6ba:	40 b3       	in	r20, 0x10	; 16
 6bc:	81 e0       	ldi	r24, 0x01	; 1
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	9c 01       	movw	r18, r24
 6c2:	06 2e       	mov	r0, r22
 6c4:	02 c0       	rjmp	.+4      	; 0x6ca <DIO_ReadPin+0x9e>
 6c6:	22 0f       	add	r18, r18
 6c8:	33 1f       	adc	r19, r19
 6ca:	0a 94       	dec	r0
 6cc:	e2 f7       	brpl	.-8      	; 0x6c6 <DIO_ReadPin+0x9a>
 6ce:	84 2f       	mov	r24, r20
 6d0:	90 e0       	ldi	r25, 0x00	; 0
 6d2:	82 23       	and	r24, r18
 6d4:	93 23       	and	r25, r19
 6d6:	02 c0       	rjmp	.+4      	; 0x6dc <DIO_ReadPin+0xb0>
 6d8:	95 95       	asr	r25
 6da:	87 95       	ror	r24
 6dc:	6a 95       	dec	r22
 6de:	e2 f7       	brpl	.-8      	; 0x6d8 <DIO_ReadPin+0xac>
		break;
 6e0:	08 95       	ret
	}
}

uint8_t DIO_ReadPin (uint8_t port,uint8_t pin)
{
uint8_t value=0;
 6e2:	80 e0       	ldi	r24, 0x00	; 0
		case portd:
		value=((PIND&(1<<pin))>>pin);
		break;
	}
return value;
}
 6e4:	08 95       	ret

000006e6 <LED_Init>:
/**********************************************************************************************/
#include "DIO_interface.h"
#include "Definitions.h"
void LED_Init(uint8_t port,uint8_t pin)
{
	DIO_SetPinDir(port,pin,OUTPUT);
 6e6:	41 e0       	ldi	r20, 0x01	; 1
 6e8:	0e 94 36 02 	call	0x46c	; 0x46c <DIO_SetPinDir>
 6ec:	08 95       	ret

000006ee <LED_On>:
}
void LED_On(uint8_t port,uint8_t pin)
{
	DIO_WritePin(port,pin,1);
 6ee:	41 e0       	ldi	r20, 0x01	; 1
 6f0:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
 6f4:	08 95       	ret

000006f6 <LED_Off>:
}
void LED_Off(uint8_t port,uint8_t pin)
{
	DIO_WritePin(port,pin,0);
 6f6:	40 e0       	ldi	r20, 0x00	; 0
 6f8:	0e 94 a6 02 	call	0x54c	; 0x54c <DIO_WritePin>
 6fc:	08 95       	ret

000006fe <main>:
#include "LED_interface.h"


int main(void)
{
	LED_Init(porta, pin0); // Green
 6fe:	60 e0       	ldi	r22, 0x00	; 0
 700:	81 e4       	ldi	r24, 0x41	; 65
 702:	0e 94 73 03 	call	0x6e6	; 0x6e6 <LED_Init>
	LED_Init(porta, pin1); // Yellow
 706:	61 e0       	ldi	r22, 0x01	; 1
 708:	81 e4       	ldi	r24, 0x41	; 65
 70a:	0e 94 73 03 	call	0x6e6	; 0x6e6 <LED_Init>
	LED_Init(porta, pin2); // Red
 70e:	62 e0       	ldi	r22, 0x02	; 2
 710:	81 e4       	ldi	r24, 0x41	; 65
 712:	0e 94 73 03 	call	0x6e6	; 0x6e6 <LED_Init>
	
	BUTTON_Init(portb, pin0);
 716:	60 e0       	ldi	r22, 0x00	; 0
 718:	82 e4       	ldi	r24, 0x42	; 66
 71a:	0e 94 2f 02 	call	0x45e	; 0x45e <BUTTON_Init>
	BUTTON_Init(portb, pin1);
 71e:	61 e0       	ldi	r22, 0x01	; 1
 720:	82 e4       	ldi	r24, 0x42	; 66
 722:	0e 94 2f 02 	call	0x45e	; 0x45e <BUTTON_Init>
	BUTTON_Init(portb, pin2);
 726:	62 e0       	ldi	r22, 0x02	; 2
 728:	82 e4       	ldi	r24, 0x42	; 66
 72a:	0e 94 2f 02 	call	0x45e	; 0x45e <BUTTON_Init>
	BUTTON_Init(portb, pin3);
 72e:	63 e0       	ldi	r22, 0x03	; 3
 730:	82 e4       	ldi	r24, 0x42	; 66
 732:	0e 94 2f 02 	call	0x45e	; 0x45e <BUTTON_Init>
	
	BUTTON_Init(portb, pin7);
 736:	67 e0       	ldi	r22, 0x07	; 7
 738:	82 e4       	ldi	r24, 0x42	; 66
 73a:	0e 94 2f 02 	call	0x45e	; 0x45e <BUTTON_Init>
	
	BCD_to_SEVEN_SEG_Init(portc, 0);
 73e:	60 e0       	ldi	r22, 0x00	; 0
 740:	83 e4       	ldi	r24, 0x43	; 67
 742:	0e 94 55 00 	call	0xaa	; 0xaa <BCD_to_SEVEN_SEG_Init>
	BCD_to_SEVEN_SEG_Init(portc, 1);
 746:	61 e0       	ldi	r22, 0x01	; 1
 748:	83 e4       	ldi	r24, 0x43	; 67
 74a:	0e 94 55 00 	call	0xaa	; 0xaa <BCD_to_SEVEN_SEG_Init>
	BCD_to_SEVEN_SEG_Init(portd, 0);
 74e:	60 e0       	ldi	r22, 0x00	; 0
 750:	84 e4       	ldi	r24, 0x44	; 68
 752:	0e 94 55 00 	call	0xaa	; 0xaa <BCD_to_SEVEN_SEG_Init>
	BCD_to_SEVEN_SEG_Init(portd, 1);
 756:	61 e0       	ldi	r22, 0x01	; 1
 758:	84 e4       	ldi	r24, 0x44	; 68
 75a:	0e 94 55 00 	call	0xaa	; 0xaa <BCD_to_SEVEN_SEG_Init>
	
	unsigned char seven_segment_1 = 0;
	unsigned char seven_segment_2 = 0; 
	unsigned char seven_segment_3 = 0; 
	unsigned char seven_segment_4 = 0; 
 75e:	00 e0       	ldi	r16, 0x00	; 0
	BCD_to_SEVEN_SEG_Init(portd, 0);
	BCD_to_SEVEN_SEG_Init(portd, 1);
	
	unsigned char seven_segment_1 = 0;
	unsigned char seven_segment_2 = 0; 
	unsigned char seven_segment_3 = 0; 
 760:	10 e0       	ldi	r17, 0x00	; 0
	BCD_to_SEVEN_SEG_Init(portc, 1);
	BCD_to_SEVEN_SEG_Init(portd, 0);
	BCD_to_SEVEN_SEG_Init(portd, 1);
	
	unsigned char seven_segment_1 = 0;
	unsigned char seven_segment_2 = 0; 
 762:	d0 e0       	ldi	r29, 0x00	; 0
	BCD_to_SEVEN_SEG_Init(portc, 0);
	BCD_to_SEVEN_SEG_Init(portc, 1);
	BCD_to_SEVEN_SEG_Init(portd, 0);
	BCD_to_SEVEN_SEG_Init(portd, 1);
	
	unsigned char seven_segment_1 = 0;
 764:	c0 e0       	ldi	r28, 0x00	; 0
	unsigned int password = 1234;
	unsigned int check; 
	
    while (1) 
    {
		BCD_to_SEVEN_SEG_Write(portc, 0, seven_segment_1);
 766:	4c 2f       	mov	r20, r28
 768:	60 e0       	ldi	r22, 0x00	; 0
 76a:	83 e4       	ldi	r24, 0x43	; 67
 76c:	0e 94 83 00 	call	0x106	; 0x106 <BCD_to_SEVEN_SEG_Write>
		BCD_to_SEVEN_SEG_Write(portc, 1, seven_segment_2);
 770:	4d 2f       	mov	r20, r29
 772:	61 e0       	ldi	r22, 0x01	; 1
 774:	83 e4       	ldi	r24, 0x43	; 67
 776:	0e 94 83 00 	call	0x106	; 0x106 <BCD_to_SEVEN_SEG_Write>
		BCD_to_SEVEN_SEG_Write(portd, 0, seven_segment_3);
 77a:	41 2f       	mov	r20, r17
 77c:	60 e0       	ldi	r22, 0x00	; 0
 77e:	84 e4       	ldi	r24, 0x44	; 68
 780:	0e 94 83 00 	call	0x106	; 0x106 <BCD_to_SEVEN_SEG_Write>
		BCD_to_SEVEN_SEG_Write(portd, 1, seven_segment_4);
 784:	40 2f       	mov	r20, r16
 786:	61 e0       	ldi	r22, 0x01	; 1
 788:	84 e4       	ldi	r24, 0x44	; 68
 78a:	0e 94 83 00 	call	0x106	; 0x106 <BCD_to_SEVEN_SEG_Write>
		
		LED_Off(porta, pin0);
 78e:	60 e0       	ldi	r22, 0x00	; 0
 790:	81 e4       	ldi	r24, 0x41	; 65
 792:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <LED_Off>
		LED_Off(porta, pin1);
 796:	61 e0       	ldi	r22, 0x01	; 1
 798:	81 e4       	ldi	r24, 0x41	; 65
 79a:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <LED_Off>
		LED_Off(porta, pin2);
 79e:	62 e0       	ldi	r22, 0x02	; 2
 7a0:	81 e4       	ldi	r24, 0x41	; 65
 7a2:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <LED_Off>
		
		if(BUTTON_Read(portb, pin0))
 7a6:	60 e0       	ldi	r22, 0x00	; 0
 7a8:	82 e4       	ldi	r24, 0x42	; 66
 7aa:	0e 94 33 02 	call	0x466	; 0x466 <BUTTON_Read>
 7ae:	88 23       	and	r24, r24
 7b0:	51 f0       	breq	.+20     	; 0x7c6 <main+0xc8>
		{
			seven_segment_4++;
 7b2:	0f 5f       	subi	r16, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 7b4:	2f ef       	ldi	r18, 0xFF	; 255
 7b6:	84 e3       	ldi	r24, 0x34	; 52
 7b8:	9c e0       	ldi	r25, 0x0C	; 12
 7ba:	21 50       	subi	r18, 0x01	; 1
 7bc:	80 40       	sbci	r24, 0x00	; 0
 7be:	90 40       	sbci	r25, 0x00	; 0
 7c0:	e1 f7       	brne	.-8      	; 0x7ba <main+0xbc>
 7c2:	00 c0       	rjmp	.+0      	; 0x7c4 <main+0xc6>
 7c4:	00 00       	nop
			_delay_ms(500);
		}
		
		if(BUTTON_Read(portb, pin1))
 7c6:	61 e0       	ldi	r22, 0x01	; 1
 7c8:	82 e4       	ldi	r24, 0x42	; 66
 7ca:	0e 94 33 02 	call	0x466	; 0x466 <BUTTON_Read>
 7ce:	88 23       	and	r24, r24
 7d0:	51 f0       	breq	.+20     	; 0x7e6 <main+0xe8>
		{
			seven_segment_3++;
 7d2:	1f 5f       	subi	r17, 0xFF	; 255
 7d4:	2f ef       	ldi	r18, 0xFF	; 255
 7d6:	84 e3       	ldi	r24, 0x34	; 52
 7d8:	9c e0       	ldi	r25, 0x0C	; 12
 7da:	21 50       	subi	r18, 0x01	; 1
 7dc:	80 40       	sbci	r24, 0x00	; 0
 7de:	90 40       	sbci	r25, 0x00	; 0
 7e0:	e1 f7       	brne	.-8      	; 0x7da <main+0xdc>
 7e2:	00 c0       	rjmp	.+0      	; 0x7e4 <main+0xe6>
 7e4:	00 00       	nop
			_delay_ms(500);
		}
		
		if(BUTTON_Read(portb, pin2))
 7e6:	62 e0       	ldi	r22, 0x02	; 2
 7e8:	82 e4       	ldi	r24, 0x42	; 66
 7ea:	0e 94 33 02 	call	0x466	; 0x466 <BUTTON_Read>
 7ee:	88 23       	and	r24, r24
 7f0:	51 f0       	breq	.+20     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
		{
			seven_segment_2++;
 7f2:	df 5f       	subi	r29, 0xFF	; 255
 7f4:	2f ef       	ldi	r18, 0xFF	; 255
 7f6:	84 e3       	ldi	r24, 0x34	; 52
 7f8:	9c e0       	ldi	r25, 0x0C	; 12
 7fa:	21 50       	subi	r18, 0x01	; 1
 7fc:	80 40       	sbci	r24, 0x00	; 0
 7fe:	90 40       	sbci	r25, 0x00	; 0
 800:	e1 f7       	brne	.-8      	; 0x7fa <main+0xfc>
 802:	00 c0       	rjmp	.+0      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 804:	00 00       	nop
			_delay_ms(500);
		}
		
		if(BUTTON_Read(portb, pin3))
 806:	63 e0       	ldi	r22, 0x03	; 3
 808:	82 e4       	ldi	r24, 0x42	; 66
 80a:	0e 94 33 02 	call	0x466	; 0x466 <BUTTON_Read>
 80e:	88 23       	and	r24, r24
 810:	51 f0       	breq	.+20     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
		{
			seven_segment_1++;
 812:	cf 5f       	subi	r28, 0xFF	; 255
 814:	2f ef       	ldi	r18, 0xFF	; 255
 816:	84 e3       	ldi	r24, 0x34	; 52
 818:	9c e0       	ldi	r25, 0x0C	; 12
 81a:	21 50       	subi	r18, 0x01	; 1
 81c:	80 40       	sbci	r24, 0x00	; 0
 81e:	90 40       	sbci	r25, 0x00	; 0
 820:	e1 f7       	brne	.-8      	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 822:	00 c0       	rjmp	.+0      	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 824:	00 00       	nop
			_delay_ms(500);
		}
		
		if(BUTTON_Read(portb, pin7))
 826:	67 e0       	ldi	r22, 0x07	; 7
 828:	82 e4       	ldi	r24, 0x42	; 66
 82a:	0e 94 33 02 	call	0x466	; 0x466 <BUTTON_Read>
 82e:	88 23       	and	r24, r24
 830:	09 f4       	brne	.+2      	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 832:	99 cf       	rjmp	.-206    	; 0x766 <main+0x68>
 834:	2f ef       	ldi	r18, 0xFF	; 255
 836:	84 e3       	ldi	r24, 0x34	; 52
 838:	9c e0       	ldi	r25, 0x0C	; 12
 83a:	21 50       	subi	r18, 0x01	; 1
 83c:	80 40       	sbci	r24, 0x00	; 0
 83e:	90 40       	sbci	r25, 0x00	; 0
 840:	e1 f7       	brne	.-8      	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 842:	00 c0       	rjmp	.+0      	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 844:	00 00       	nop
		{
			_delay_ms(500);
			
			LED_On(porta, pin1);
 846:	61 e0       	ldi	r22, 0x01	; 1
 848:	81 e4       	ldi	r24, 0x41	; 65
 84a:	0e 94 77 03 	call	0x6ee	; 0x6ee <LED_On>
 84e:	2f ef       	ldi	r18, 0xFF	; 255
 850:	89 e6       	ldi	r24, 0x69	; 105
 852:	98 e1       	ldi	r25, 0x18	; 24
 854:	21 50       	subi	r18, 0x01	; 1
 856:	80 40       	sbci	r24, 0x00	; 0
 858:	90 40       	sbci	r25, 0x00	; 0
 85a:	e1 f7       	brne	.-8      	; 0x854 <__DATA_REGION_LENGTH__+0x54>
 85c:	00 c0       	rjmp	.+0      	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
 85e:	00 00       	nop
			_delay_ms(1000);
			LED_Off(porta, pin1);
 860:	61 e0       	ldi	r22, 0x01	; 1
 862:	81 e4       	ldi	r24, 0x41	; 65
 864:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <LED_Off>
 868:	2f ef       	ldi	r18, 0xFF	; 255
 86a:	89 e6       	ldi	r24, 0x69	; 105
 86c:	98 e1       	ldi	r25, 0x18	; 24
 86e:	21 50       	subi	r18, 0x01	; 1
 870:	80 40       	sbci	r24, 0x00	; 0
 872:	90 40       	sbci	r25, 0x00	; 0
 874:	e1 f7       	brne	.-8      	; 0x86e <__stack+0xf>
 876:	00 c0       	rjmp	.+0      	; 0x878 <__stack+0x19>
 878:	00 00       	nop
			_delay_ms(1000);
			LED_On(porta, pin1);
 87a:	61 e0       	ldi	r22, 0x01	; 1
 87c:	81 e4       	ldi	r24, 0x41	; 65
 87e:	0e 94 77 03 	call	0x6ee	; 0x6ee <LED_On>
 882:	2f ef       	ldi	r18, 0xFF	; 255
 884:	89 e6       	ldi	r24, 0x69	; 105
 886:	98 e1       	ldi	r25, 0x18	; 24
 888:	21 50       	subi	r18, 0x01	; 1
 88a:	80 40       	sbci	r24, 0x00	; 0
 88c:	90 40       	sbci	r25, 0x00	; 0
 88e:	e1 f7       	brne	.-8      	; 0x888 <__stack+0x29>
 890:	00 c0       	rjmp	.+0      	; 0x892 <__stack+0x33>
 892:	00 00       	nop
			_delay_ms(1000);
			LED_Off(porta, pin1);
 894:	61 e0       	ldi	r22, 0x01	; 1
 896:	81 e4       	ldi	r24, 0x41	; 65
 898:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <LED_Off>
 89c:	2f ef       	ldi	r18, 0xFF	; 255
 89e:	89 e6       	ldi	r24, 0x69	; 105
 8a0:	98 e1       	ldi	r25, 0x18	; 24
 8a2:	21 50       	subi	r18, 0x01	; 1
 8a4:	80 40       	sbci	r24, 0x00	; 0
 8a6:	90 40       	sbci	r25, 0x00	; 0
 8a8:	e1 f7       	brne	.-8      	; 0x8a2 <__stack+0x43>
 8aa:	00 c0       	rjmp	.+0      	; 0x8ac <__stack+0x4d>
 8ac:	00 00       	nop
			_delay_ms(1000);
			LED_On(porta, pin1);
 8ae:	61 e0       	ldi	r22, 0x01	; 1
 8b0:	81 e4       	ldi	r24, 0x41	; 65
 8b2:	0e 94 77 03 	call	0x6ee	; 0x6ee <LED_On>
 8b6:	2f ef       	ldi	r18, 0xFF	; 255
 8b8:	89 e6       	ldi	r24, 0x69	; 105
 8ba:	98 e1       	ldi	r25, 0x18	; 24
 8bc:	21 50       	subi	r18, 0x01	; 1
 8be:	80 40       	sbci	r24, 0x00	; 0
 8c0:	90 40       	sbci	r25, 0x00	; 0
 8c2:	e1 f7       	brne	.-8      	; 0x8bc <__stack+0x5d>
 8c4:	00 c0       	rjmp	.+0      	; 0x8c6 <__stack+0x67>
 8c6:	00 00       	nop
			_delay_ms(1000);
			LED_Off(porta, pin1);
 8c8:	61 e0       	ldi	r22, 0x01	; 1
 8ca:	81 e4       	ldi	r24, 0x41	; 65
 8cc:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <LED_Off>
			
			check = (seven_segment_4 * 1000) + (seven_segment_3 * 100) + (seven_segment_2 * 10) + (seven_segment_1);	
 8d0:	28 ee       	ldi	r18, 0xE8	; 232
 8d2:	33 e0       	ldi	r19, 0x03	; 3
 8d4:	02 9f       	mul	r16, r18
 8d6:	c0 01       	movw	r24, r0
 8d8:	03 9f       	mul	r16, r19
 8da:	90 0d       	add	r25, r0
 8dc:	11 24       	eor	r1, r1
 8de:	ac 01       	movw	r20, r24
 8e0:	24 e6       	ldi	r18, 0x64	; 100
 8e2:	12 9f       	mul	r17, r18
 8e4:	40 0d       	add	r20, r0
 8e6:	51 1d       	adc	r21, r1
 8e8:	11 24       	eor	r1, r1
 8ea:	8d 2f       	mov	r24, r29
 8ec:	90 e0       	ldi	r25, 0x00	; 0
 8ee:	bc 01       	movw	r22, r24
 8f0:	66 0f       	add	r22, r22
 8f2:	77 1f       	adc	r23, r23
 8f4:	9c 01       	movw	r18, r24
 8f6:	22 0f       	add	r18, r18
 8f8:	33 1f       	adc	r19, r19
 8fa:	22 0f       	add	r18, r18
 8fc:	33 1f       	adc	r19, r19
 8fe:	22 0f       	add	r18, r18
 900:	33 1f       	adc	r19, r19
 902:	cb 01       	movw	r24, r22
 904:	82 0f       	add	r24, r18
 906:	93 1f       	adc	r25, r19
 908:	84 0f       	add	r24, r20
 90a:	95 1f       	adc	r25, r21
 90c:	8c 0f       	add	r24, r28
 90e:	91 1d       	adc	r25, r1
		
			if(check == password)
 910:	82 3d       	cpi	r24, 0xD2	; 210
 912:	94 40       	sbci	r25, 0x04	; 4
 914:	71 f4       	brne	.+28     	; 0x932 <__stack+0xd3>
			{
				LED_On(porta, pin0);
 916:	60 e0       	ldi	r22, 0x00	; 0
 918:	81 e4       	ldi	r24, 0x41	; 65
 91a:	0e 94 77 03 	call	0x6ee	; 0x6ee <LED_On>
 91e:	8f ef       	ldi	r24, 0xFF	; 255
 920:	9d e3       	ldi	r25, 0x3D	; 61
 922:	29 e4       	ldi	r18, 0x49	; 73
 924:	81 50       	subi	r24, 0x01	; 1
 926:	90 40       	sbci	r25, 0x00	; 0
 928:	20 40       	sbci	r18, 0x00	; 0
 92a:	e1 f7       	brne	.-8      	; 0x924 <__stack+0xc5>
 92c:	00 c0       	rjmp	.+0      	; 0x92e <__stack+0xcf>
 92e:	00 00       	nop
 930:	1a cf       	rjmp	.-460    	; 0x766 <main+0x68>
				_delay_ms(3000);
			}
			else
			{
				LED_On(porta, pin2);
 932:	62 e0       	ldi	r22, 0x02	; 2
 934:	81 e4       	ldi	r24, 0x41	; 65
 936:	0e 94 77 03 	call	0x6ee	; 0x6ee <LED_On>
 93a:	8f ef       	ldi	r24, 0xFF	; 255
 93c:	9d e3       	ldi	r25, 0x3D	; 61
 93e:	29 e4       	ldi	r18, 0x49	; 73
 940:	81 50       	subi	r24, 0x01	; 1
 942:	90 40       	sbci	r25, 0x00	; 0
 944:	20 40       	sbci	r18, 0x00	; 0
 946:	e1 f7       	brne	.-8      	; 0x940 <__stack+0xe1>
 948:	00 c0       	rjmp	.+0      	; 0x94a <__stack+0xeb>
 94a:	00 00       	nop
 94c:	0c cf       	rjmp	.-488    	; 0x766 <main+0x68>

0000094e <__tablejump2__>:
 94e:	ee 0f       	add	r30, r30
 950:	ff 1f       	adc	r31, r31
 952:	05 90       	lpm	r0, Z+
 954:	f4 91       	lpm	r31, Z
 956:	e0 2d       	mov	r30, r0
 958:	09 94       	ijmp

0000095a <_exit>:
 95a:	f8 94       	cli

0000095c <__stop_program>:
 95c:	ff cf       	rjmp	.-2      	; 0x95c <__stop_program>
